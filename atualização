const express = require('express');
const cors = require('cors');
const bodyParser = require('body-parser');
const admin = require('firebase-admin');

const app = express();
app.use(cors());
app.use(bodyParser.json());

admin.initializeApp({
  credential: admin.credential.applicationDefault(),
});

const posts = [];
let id = 1;

// Middleware Firebase Auth
async function verifyToken(req, res, next) {
  const token = req.headers.authorization?.split('Bearer ')[1];
  if (!token) return res.status(403).send('No token provided');
  try {
    const decoded = await admin.auth().verifyIdToken(token);
    req.user = decoded;
    next();
  } catch (err) {
    res.status(403).send('Unauthorized');
  }
}

// GET all posts
app.get('/posts', (req, res) => {
  res.json(posts);
});

// POST new post
app.post('/posts', verifyToken, (req, res) => {
  const { title, content, imageUrl, category } = req.body;
  const newPost = {
    id: id++,
    title,
    content,
    imageUrl,
    category,
    createdAt: new Date().toISOString(),
    author: req.user.name || req.user.email,
    likes: 0,
    dislikes: 0,
    comments: []
  };
  posts.push(newPost);
  res.status(201).json(newPost);
});

// Like post
app.post('/posts/:id/like', verifyToken, (req, res) => {
  const post = posts.find(p => p.id == req.params.id);
  if (post) {
    post.likes += 1;
    res.json(post);
  } else {
    res.status(404).send('Post not found');
  }
});

// Dislike post
app.post('/posts/:id/dislike', verifyToken, (req, res) => {
  const post = posts.find(p => p.id == req.params.id);
  if (post) {
    post.dislikes += 1;
    res.json(post);
  } else {
    res.status(404).send('Post not found');
  }
});

// Add comment
app.post('/posts/:id/comments', verifyToken, (req, res) => {
  const post = posts.find(p => p.id == req.params.id);
  if (post) {
    const comment = {
      user: req.user.name || req.user.email,
      text: req.body.text,
      date: new Date().toISOString()
    };
    post.comments.push(comment);
    res.json(post);
  } else {
    res.status(404).send('Post not found');
  }
});

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => console.log(`API running on http://localhost:${PORT}`));
{
  "name": "buzzfeed-clone-backend",
  "version": "1.0.0",
  "main": "server.js",
  "scripts": {
    "start": "node server.js"
  },
  "dependencies": {
    "cors": "^2.8.5",
    "express": "^4.18.2",
    "firebase-admin": "^11.10.1",
    "body-parser": "^1.20.2"
  }
}
